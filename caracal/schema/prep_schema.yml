type: map
mapping:
  schema_version:
    type: str
    required: true

  prep:
    desc: Prepare the data for calibration and imaging.
    type: map
    mapping:
      enable:
        desc: Execute the prep worker (i.e. the  data-preparation step).
        type: bool
        required: true
        example: 'False'
      label_in:
        type: str
        required: true
        desc: If this label is an empty string this worker operates on the input .MS file(s) given in the getdata worker. If the label is not an empty string then it is added to the input .MS file(s) name (specified for the getdata worker) to define the name of the .MS file(s) to work on. These are named <input>_<label>.ms if 'field' (see below) is set to 'calibrators', or <input>-<target>_<label>.ms if 'field' is set to 'target' (with one .MS file for each target in the input .MS).
        example: ''
      field:
        desc: In combination with a non-empty 'label_in' (see above), 'field' defines which .MS file(s) to work on. This parameter is ignored if 'label_in' is empty. Options are 'target' and 'calibrators'.
        type: str
        enum: ["target", "calibrators"]
        required: False
        example: 'calibrators'
      fixvis:
        desc: Fix the UVW coordinates through the CASA task 'fixvis'.
        type: map
        mapping:
          enable:
            desc: Enable execution of 'fixvis'.
            type: bool
            required: false
            example: 'False'            
      clear_cal:
        desc: Clear out calibrated data and reset the previous predicted model.
        type: bool
        required: false
        example: 'False'            
      manage_flags:
        desc: Manage flags.
        type: map
        mapping:
          enable: 
            desc: Enable segment 'manage_flags'.
            type: bool
            required: false
            example: 'True'
          mode: 
            desc: Mode for managing flags. If set to 'save_legacy_flags', save the current FLAG column as a 'caracal_legacy' flag version. (If that already exists, the 'overwrite_legacy_flags' parameter below allows you to overwrite it, but think twice...) If set to 'restore', restore flags from the flag version specified via the 'version' parameter below, and delete all flag versions created after that version.
            type: str
            required: false
            example: 'save_legacy_flags'
            enum: ["save_legacy_flags", "restore"]
          version:
            desc: Name of the flag version to restore. Note that all flag versions saved after this version will be deleted.
            type: str
            required: false
            example: 'caracal_legacy'
          overwrite_legacy_flags:
            desc: If 'mode' above is set to 'save_legacy_flags' but the 'caracal_legacy' flag version already exists, allow CARACal to overwrite it. (But user discretion is advised, so think twice!)
            type: bool
            required: false
            example: 'False'
      spectral_weights: 
        desc: How to initialize spectral weights.
        type: map
        mapping: 
          enable: 
            desc: Enable segment 'spectral_weights'.
            type: bool
            required: false
            example: 'False'
          mode:
            desc: Mode for spectral weights. Options are 'uniform' (set all weights to unity), 'estimate' (estimate spectral weights from frequency-dependent SEFD/Tsys/Noise values, and see 'estimate' segment of this section), and 'delete' (delete WEIGHT_SPECTRUM column if it exists).
            type: str
            enum: ["uniform", "estimate", "delete"]
            required: false
            example: 'uniform'
          estimate:
            desc: Estimate spectral weights from frequency-dependent SEFD/Tsys/Noise values
            type: map
            mapping:
              stats_data: 
                desc: "File with SEFD/Tsys/Noise data. If data is from MeerKAT telescope, you can specify 'use_package_meerkat_spec' to use package data."
                type: str
                example: 'use_package_meerkat_spec'
                required: false
              weight_columns:
                seq:
                  - type: str
                desc: column names
                required: false
                example: 'WEIGHT, WEIGHT_SPECTRUM'
              noise_columns:
                seq:
                  - type: str
                desc: column names for noise
                required: false
                example: 'SIGMA, SIGMA_SPECTRUM'
              write_to_ms:
                desc: write columns to file
                type: bool
                required: false
                example: 'True'
