image_HI:
  desc: Create HI data cube and detect sources therein
  type: map
  mapping:
    enable:
      desc: Execute segment image_HI (yes/no). Default: yes. 
      type: bool
      required: true
    order:
      desc: Order in queue of workers (0: first, 1: second, ...). Default: 11.
      type: int
      required: false
  label:
    desc: Label of names of MS data sets to be used. MS data set names will always start with the data set id, followed by a hyphen, followed by desc. Default: 'corr'.
    type: str
    required: false
    
  restfreq:
    desc: Rest frequency default value for this worker. Default: '1.420405752GHz'.
    type: str
    required: false
  npix:
    desc: Default number of pixels (wherever npix is requested) in this worker. List of integers (width and height) or a single integer for square images. Default: 1024.
    type: seq
      seq:
	- type: int
      	# type list or int does not exist
    required: false
  cell:
    desc: Default scale of a pixel in arcsec. Default: 7.
    type: float
    required: false
  weight:
    desc: Default weight for the worker. Weightmode can be: natural, uniform, briggs. When using Briggs weighting, the Robustness parameter robust has to be specified in addition. Default: natural.
    type: str
    required: false
  robust:
    desc: Default robust parameter in case of Briggs weighting. Default: 2.
    type: float
    required: false
  uvcontsub:
    desc: Perform a continuum subtraction on the visibilities by fitting a fitorderth-order polynomial to xx and yy correlations at each time step.
    type: map
    mapping:
      enable:
        desc: Execute segment uvcontsub (yes/no). Default: yes.
	type: bool
	required: false
      fitorder:
        desc: Order of the polynomial to be subtracted. Default: 1.
	type: int
	required: false
      fitspw:
	desc: Selection of line-free channels using CASA syntax (e.g. '0:0~100;150:300'). If set to null, a fit to all unflagges visibilities will be performed. (Defaults to null)
	type: str
      	required: false
  sunblocker:
    desc: Use sunblocker to remove solar RFI. See description of sunblocker at https://github.com/gigjozsa/sunblocker in method phazer of module sunblocker.py.
    type: map
    mapping:
      enable:
        desc: Execute segment sunblocker (yes/no). Default: yes.
	type: bool
	required: false
      use_contsub:
        desc: Execute sunblocker on continuum-subtracted data (otherwise use non-continuum-subtracted data) (yes/no). Default: yes.
	type: bool
	required: false
      imsize:
        desc: Image size (use the same as in wsclean_image or casa_image). Default: worker npix
	type: int
	required: false
      cell:
	desc: Cell size in arcsec (use the same as in wsclean_image or casa_image). Default: worker cell
	type: float
	required: false
      threshold:
        desc: Distance from average beyond which data are flagged in units of sigma. Default: 4.
	type: float
	reguired: false
  wsclean_image:
    desc: Use WSClean to create line data cube. See https://sourceforge.net/projects/wsclean/.
    type: map
    mapping:
      enable:
        desc: Execute segment wsclean_image (yes/no). Default: yes.
	type: bool
	required: false
      use_contsub:
        desc: Execute wsclean_image on continuum-subtracted data (otherwise use non-continuum-subtracted data) (yes/no). Default: yes.
	type: bool
	required: false
      pol:
      	desc: Polarizations in output cube (I,Q,U,V,XX,YY,XY,YX,RR,LL,RL,LR and combinations). Default: I.
	type: str
	required: false
      spwid:
	desc: Spectral window to use. Default: 0.
	type: int
	required: false
      nchans:
        desc: Number of channels to analyse, 'all' or an integer number. Default: 'all'
	type: text
	required: false
      channelrange: [chan_start,chan_end]
        desc: Channels to analyze. Set to 'all' to use all channels or [start channel, end channel] for a channel range. Default: [0, nchans].
	type: seq
	matching: "any"
	seq:
	  - type: int
	  - type: str
	required: false
	# type: str or list does not exist
      npix:
	desc: Image size in pixels. List of integers (width and height) or a single integer for square images. Default: Worker default for npix.
	type: seq
	seq:
	  - type: int
      	# type list or int does not exist
	required: false
      trim:
        desc: After inversion, trim the images to the given size. List of integers (width and height) or a single integer for a square image. Default: 512.
	type: seq
	seq:
          - type: int
	required: false
      	# type seq or int does not exist
      channelsout:
        desc: Number of output channels or 'all'. The bandwidth will be split into this number of channels. Default: 'all'
	type: text
	required: false
      mgain:
	desc: Cleaning gain for major iterations: Ratio of peak that will be subtracted in each major iteration. Default: 0.9
	type: float
	required: false
      cell:
        desc: Scale of a pixel. Default unit is arcsec, but can be specificied, e.g. 'scale 20asec'. Default: Worker default for cell.
	type: text
	required: false
      weight:
      	desc: Weightmode can be: natural, uniform, briggs. When using Briggs weighting, the Robustness parameter robust has to be specified in addition. Default: Worker default for weight.
	type: str
	required: false
      robust: 2
      	desc: Robust parameter in case of Briggs weighting. Default: 2.
	type: float
	required: false
      niter:
        desr: Maximum number of clean iterations to perform. Default: 1000000.
	type: int
	required: false
      automask: 5
      	descr: Clean threshold (Cutoff parameter) for automasking in first stage: in the first stage, a full multiscale clean is run and a mask (for each scale) is created. In the second stage, CLEANing continues to a cutoff parameter of autothreshold using each scale-dependent mask for each scale. Default: 5.
	type: float
	required: false
      autothreshold:
	descr: Clean threshold (Cutoff parameter) for automasking in second stage: in the first stage, a full multiscale clean with a cutoff parameter automask is run and a mask (for each scale) is created. In the second stage, CLEANing continues to a cutoff parameter of autothreshold using each scale-dependent mask for each scale. Default: 1.
	type: float
	required: false
      cleanborder:
        desc: Set the border size in which no cleaning is performed, in percentage of the width/height of a plane. With an plane size of 1000 pixels and clean border of 1%, each border is 10 pixels. Default: 0.
	type: float
	required: false
      make_cube:
        desc: If set to true the output is a data cube, if set to false the output is one fits file per spectral channel. Default: yes.
	type: bool
	required: false
  casa_image:
    desc: Use CASA to create line data cube.
    type: map
    mapping:
      enable:
	type: bool
	required: false
      use_contsub:
        desc: Execute wsclean_image on continuum-subtracted data (otherwise use non-continuum-subtracted data) (yes/no). Default: yes.
	type: bool
	required: false
      pol:
      	desc: Polarizations in output cube (I,Q,U,V,XX,YY,XY,YX,RR,LL,RL,LR and combinations). Default: I.
	type: str
	required: false
      spwid:
	desc: Spectral window to use. Default: 0.
	type: int
	required: false
      nchans:
        desc: Number of channels. If set to 'all', all channels are used. Otherwise provide the number of channels (starting with startchan, see below). Default: 'all'.
	type: text
	required: false
      startchan:
        desc: Starting channel of the cube. Used in combination with nchans. Default: 0.
	type: int
	required: false
      npix:
	desc: Image size in pixels. List of integers (width and height) or a single integer for square images. Default: worker npix.
	type: seq
	seq:
	  - type: int
      	# type list or int does not exist
	required: false
      cell:
        desc: Scale of a pixel. Default unit is arcsec, but can be specificied, e.g. 'scale 20asec'. Default: worker cell.
	type: text
	required: false
      weight:
      	desc: Weightmode can be: natural, uniform, briggs. When using Briggs weighting, the Robustness parameter robust has to be specified in addition. Default: worker weight.
	type: str
	required: false
      robust:
      	desc: Robust parameter in case of Briggs weighting. Default: worker robust.
	type: float
	required: false
      niter:
        desr: Maximum number of clean iterations to perform. Default: 1000000.
	type: int
	required: false
      threshold:
        descr: Flux level to stop cleaning, must include units, e.g. '1.0mJy'. Default: '10mJy'.
	type: str
	required: false
      port2fits:
        descr: Port output to fits files if yes. Default: yes.
	type: bool
	required: false
  sofia: Run SoFiA source finder to produce a source mask and a Moment-0 map.
    desc:
    type: map
    mapping:
      enable:
        desc: Execute segment sofia (yes/no)? Default: yes.
        type: bool
        required: false
      imager:
        desc: Description of imager used in previous steps to produce data cube. Default: 'casa'.
	type: str
	required: false
      rmsMode:
        desc: Method to determine rms ('mad' for using median absolute deviation, 'std' for using standard deviation, 'negative' for using Gaussian fit to negative voxels). Default: 'mad'
	type:str
	required: false
      threshold:
        desc: SoFiA source finding threshold. Default: 4.0.
	type: float
	required: false
      flag:
        desc: Use flag regions (yes/no)? Default: no.
        type: bool
        required: false
      flagregion:
        desc: Pixel/channel range(s) to be flagged prior to source finding. Format: [[x1, x2, y1, y2, z1, z2], ...]. Default: [].
      	type: seq
	seq:
	  - type: seq
	    seq:
	      type: int
	required: false
      merge:
        descr: Use method to de-select and merge emission islands detected by any of SoFiAâ€™s source finding algorithms. If turned on, pixels with a separation of less than mergeX pixels in x direction and less than mergeY pixels in y-direction and less than z pixels in z-direction will be merged and identified as a single object in the mask. Detections whose extent in x-direction is smaller than minSizeX, in y direction is smaller than minSizeY, and in z-direction is smaller than minSizeZ will be removed from the mask. Parameter merge determines if the merging should be applied (yes/no). Default: yes.
	type: bool
	required: false
      mergeX:
        descr: Merge-'radius' in x-direction. Default: 2
	type: int
	required: false
      mergeY: Merge-'radius' in y-direction. Default: 2
	type: int
	required: false
      mergeZ: Merge-'radius' in z-direction (velocity direction). Default: 3
	type: int
	required: false
      minSizeX:
	desc: Minimum size in x-direction. Default: 3.
	type: int
	required: false
      minSizeY:
	desc: Minimum size in y-direction. Default: 3.
	type: int
	required: false
      minSizeZ:
	desc: Minimum size in y-direction. Default: 5.      
	type: int
	required: false
  flagging_summary:
    enable: yes
