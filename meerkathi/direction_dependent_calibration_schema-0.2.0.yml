type: map
mapping:
  schema_version:
    type: str
    required: true

  direction_dependent_calibration:
    type: map
    desc: Perform direction dependent calibration on the data
    mapping:
     enable:
       type: bool
       desc: Execute this statement
       required: true
     order:
        type: int
        desc: Workers are executed in ascedning order based on this value
        required: true
     label:
        type: str
        desc: Label to tag the output files
        required: true
     init:
       type: map
       desc: Save flags from the last DI selfcal iteration
       mapping:
         enable:
           type: bool
           desc: Execute this section
           required: true
     restore:
       type: map
       desc: Restore data to last DI selfcal iteration
       mapping:
         enable:
           type: bool
           desc: Execute this section
           required: true
     image_dd:
       type: map
       desc: Imaging parameters for DD cal loop
       mapping:
         enable:
           type: bool
           desc: Execute this section.
           required: true
         npix:
           type: int
           desc: Number of pixels in the image
           required: true
         cell:
           type: float
           desc: Pixel size in arcsec
           required: true
         niter:
           type: int
           desc: Number of clean iterations
           required: true
         robust:
           type: float
           desc: Robust parameter for imaging
           required: true
         nchans:
           type: int
           desc: Number of channels for the output image cube.
           required: true
     calibrate_dd:
       type: map
       desc: Direction dependent calibration parameters
       mapping:
         enable:
           type: bool
           desc: Execute this section.
           required: true
         sigma:
           type: float
           desc: Threshold to use in detecting outlier regions in images by using CatDagger. 4.5 is a good value (also default), but may need a lower value for some images.
           required: false
         min_dist_from_phcentre:
           type: int
           desc: Number of pixels (radius) around the centre of the image in which sources will not be tagged. Default kept at 1300 (roughly 30').
           required: false
         dist_ncpu:
           type: int
           desc: Number of cpus
           required: true
         ddsols:
           seq:
              - type: int
           desc: Solution intervals for ddjones in time
           required: true
         de_sources_mode:
           type: str
           desc: Mode in which dE sources are tagged. 'auto' uses catdagger, while in 'manual' mode, one needs to give a list of sources.
           required: true
         de_sources_manual:
           seq:
              - type: str
           desc: List of sources to tag for DD calibration. In "RA(deg), DEC(deg), FLux Density(Jy)" format.
           required: true
         sol_min_bl:
           type: float
           desc: Min baseline length to solve for.
           required: true
         madmax_enable:
           type: bool
           desc: Enable madmax flagging in Cubical.
           required: true
         madmax_threshold:
           seq:
              - type: float
           desc: Threshold for MAD flagging per baseline (specified in sigmas). Residuals exceeding mad-thr*MAD/1.428 will be flagged. MAD is computed per baseline. This can be specified as a list e.g. N1,N2,N3,... The first value is used to flag residuals before a solution starts (use 0 to disable), the next value is used when the residuals are first recomputed during the solution several iteratins later (see -chi-int), etc. A final pass may be done at the end of the solution. The last value in the list is reused if necessary. Using a list with gradually decreasing values may be sensible.
           required: false
         madmax_global_threshold:
           seq:
              - type: float
           desc: Threshold for global median MAD (MMAD) flagging. MMAD is computed as the median of the per-baseline MADs. Residuals exceeding S*MMAD/1.428 will be flagged.
           required: false
         madmax_estimate:
           type: str
           desc: MAD estimation mode. Use 'corr' for a separate estimate per each baseline and correlation. Otherwise, a single estimate per baseline is computed using 'all' correlations, or only the 'diag' or 'offdiag' correlations.
           required: false


