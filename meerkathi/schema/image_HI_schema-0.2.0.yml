type: map
mapping:
  schema_version:
    type: str
    required: true

  image_HI:
    desc: Create HI data cube and detect sources therein
    type: map
    mapping:
      enable:
        desc: Execute segment image_HI (yes/no).
        type: bool
        required: true
        example: 'False'
      label:
        desc: Label of names of MS data sets to be used. MS data set names will always start with the data set id, followed by a hyphen, followed by desc.
        type: str
        required: false
        example: 'corr'
      restfreq:
        desc: Rest frequency default value for this worker.
        type: str
        required: false
        example: '1.420405752GHz'
      npix:
          seq:
            -  type: int
          desc: Default number of pixels (wherever npix is requested) in this worker. List of integers (width and height) or a single integer for square images.
          required: false
          example: '360'
      cell:
        desc: Default scale of a pixel in arcsec.
        type: float
        required: false
        example: '5'
      weight:
        desc: Weightmode can be natural, uniform, briggs. When using Briggs weighting, the Robustness parameter robust has to be specified in addition.
        type: str
        required: false
        example: 'briggs'
      robust:
        desc: Default robust parameter in case of Briggs weighting.
        type: float
        required: false
        example: '2' 
      
      subtractmodelcol:
        desc: Replace the column CORRECTED_DATA with the difference CORRECTED_DATA - MODEL_DATA. This is useful for continuum subtraction as it enables the subtraction of the most recent continuum clean model.
        type: map
        mapping:
          enable:
            desc: Execute segment subtractmodelcol.
            type: bool
            required: false
            example: 'False'  
      
      mstransform:
        desc: Perform UVLIN continuum subtraction and/or doppler tracking corrections
        type: map
        mapping:
          enable:
            desc: Execute segment doppler correction (yes/no).
            type: bool
            required: false
            example: 'False'
          telescope:
            desc: The name of the telescope from which observations were made. Default is the 'meerkat' telescope. Current options are gmrt, vla, wsrt, atca.
            enum: ['meerkat','vla','gmrt', 'wsrt', 'atca', 'askap']
            type: str
            required: false
            example: 'meerkat'
          doppler:
            desc: Transform channel labels and visibilities to a different spectral reference frame.
            type: bool
            required: false
            example: 'True'
          mode:
            desc: Regridding mode (channel/velocity/frequency/channel_b).
            type: str
            required: false
            example: 'frequency'
          outframe:
            desc: Output reference frame, options 'LSRK', 'LSRD', 'BARY', 'GALACTO', 'LGROUP', 'CMB', 'GEO', 'TOPO'.
            type: str
            required: false
            example: 'BARY'
          veltype:
            desc: Definition of velocity (as used in mode), radio or optical.
            type: str
            required: false
            example: 'radio'
          outchangrid:
            desc: Output channel grid for Doppler correction. Default is 'auto', and the pipeline will calculate the appropriate channel grid. If not 'auto' it must be in the format 'nchan,chan0,chanw' where nchan is an integer, and chan0 and chanw must include units appropriate for the chosen mode (see parameter 'mode' above)
            type: str
            required: false
            example: 'auto'
          uvlin:
            desc: Perform continuum subtraction as in task uvcontsub whilst regridding within mstransform.
            type: bool
            required: false
            example: 'True'
          fitspw:
            desc: Spectral window channel selection for fitting the continuumSelection of line-free channels using CASA syntax (e.g. '0:0~100;150:300'). If set to null, a fit to all unflagges visibilities will be performed.
            type: str
            required: false
            example: 'null'
          fitorder:
            desc: Polynomial order for the continuum fits
            type: int
            required: false
            example: '1'
          column:
            desc: Data column to use.
            type: str
            required: false
            example: 'CORRECTED_DATA'
          obsinfo:
            desc: Create obsinfo.txt and obsinfo.json of MS file created by mstransform.
            type: bool
            required: false
            example: 'True'
      
      sunblocker:
        desc: Use sunblocker to remove solar RFI. See description of sunblocker on github repository gigjozsa/sunblocker in method phazer of module sunblocker.py.
        type: map
        mapping:
          enable:
            desc: Execute segment sunblocker (yes/no). Default is yes.
            type: bool
            required: false
            example: 'False'
          use_mstransform:
            desc: Execute sunblocker on continuum-subtracted data (otherwise use non-continuum-subtracted data) (yes/no). Default is yes.
            type: bool
            required: false
            example: 'False'
          imsize:
            desc: Image size (use the same as in wsclean_image or casa_image). Default is worker npix
            type: int
            required: false
            example: '1000'
          cell:
            desc: Cell size in arcsec (use the same as in wsclean_image or casa_image). Default is worker cell
            type: float
            required: false
            example: '7.'
          threshold:
            desc: Distance from average beyond which data are flagged in units of sigma. Default is 4.
            type: float
            required: false
            example: '3.'
          vampirisms:
            desc: Apply only to data taken during day time (defaults to true)
            type: bool
            required: false
            example: 'False'
          uvmax:
            desc: Maximum uvdistance in wavelength to be analysed (defaults to 2000)
            type: float
            required: false
            example: '2000'
          uvmin:
            desc: Minimum uvdistance in wavelength to be analysed (defaults to 0)
            type: float
            required: false
            example: '0.'

      wsclean_image:
        desc: Use WSClean to create line data cube. See WSclean wiki on sourceforge.
        type: map
        mapping:
          enable:
            desc: Execute segment wsclean_image (yes/no). Default is yes.
            type: bool
            required: false
            example: 'True'
          wscl_niter:
            desc: Maximum number of rewsclean iterations to perform. Default is 2 # for now .
            type: int
            required: false
            example: '2'
          tol:
            type: float
            desc: Relative change in the noise.
            required: false
            example: '3.'
          rm_intcubes:
            desc: If set to true it deletes intermediate cubes from the output directory, if set to false it keeps all the cubes from the wsclean loops
            type: bool
            required: false
            example: 'False'
          use_mstransform:
            desc: Execute wsclean_image on continuum-subtracted data (otherwise use non-continuum-subtracted data) (yes/no). Default is yes.
            type: bool
            required: false
            example: 'False'
          pol:
            desc: Polarizations in output cube (I,Q,U,V,XX,YY,XY,YX,RR,LL,RL,LR and combinations). Default is I.
            type: str
            required: false
            example: 'I'
          spwid:
            desc: Spectral window to use. Default is 0.
            type: int
            required: false
            example: '0'
          nchans:
            desc: Number of channels of HI cube, 'all' or an integer number. Default is 'all'.
            type: str
            required: false
            example: 'all'
          firstchan:
            desc: First channel of HI cube. Default is 0.
            type: int
            required: false
            example: '0'
          binchans:
            desc: Integer binning of channels. Default is 1 (no binning).
            type: int
            required: false
            example: '1'
          npix:
            desc: Image size in pixels. List of integers (width and height) or a single integer for square images. Default is Worker default for npix.
            type: seq
            seq:
              - type: int
            required: false
            example: '1000 , 1000'
          padding:
            desc: Images have initial size padding*npix, and are later trimmed to npix. Default is 1.2.
            type: float
            required: false
            example: '1.2'
          mgain:
            desc: Cleaning gain for major iterations, Ratio of peak that will be subtracted in each major iteration. Default is 0.9.
            type: float
            required: false
            example: '0.9'
          cell:
            desc: Scale of a pixel. Default unit is arcsec, but can be specificied, e.g. 'scale 20asec'. Default is Worker default for cell.
            type: float
            required: false
            example: '7'
          weight:
            desc: Weightmode can be natural, uniform, briggs. When using Briggs weighting, the Robustness parameter robust has to be specified in addition. Default is Worker default for weight.
            type: str
            required: false
            example: 'briggs'
          robust:
            desc: Robust parameter in case of Briggs weighting. Default is 2.
            type: float
            required: false
            example: '2'
          taper:
            desc: Gaussian taper FWHM in arcsec. Default is 0, no tapering.
            type: float
            required: false
            example: '0'
          niter:
            desc: Maximum number of clean iterations to perform. Default is 1000000.
            type: int
            required: false
            example: '0'
          ownfitsmask:
            type: str
            desc: filename of fits mask (in output/masking folder)
            required: false
            example: ''
          auto_mask:
            seq:
              - type: int 
            desc: Construct a mask from found components and when a threshold of sigma is reached, continue cleaning with the mask down to the normal threshold.
            required: false
            example: '30, 10, 7'
          auto_threshold:
            seq:
              - type: float
            desc: Auto clean threshold
            required: false
            example: '0.5'
          cleanborder:
            desc: Set the border size in which no cleaning is performed, in percentage of the width/height of a plane. With an plane size of 1000 pixels and clean border of 1%, each border is 10 pixels. Default is 0.
            type: float
            required: false
            example: '0'
          make_cube:
            desc: If set to true the output is a data cube, if set to false the output is one fits file per spectral channel. Default is yes.
            type: bool
            required: false
            example: 'True'
          no_update_mod:
            desc: If set to true, will not store the clean model in MODEL_DATA. Relevant for HI.
            type: bool
            required: false
            example: 'False'
          multi_scale:
            type: bool
            desc: switch on multiscale cleaning
            required: false
            example: 'False'
          multi_scale_scales:
            seq:
              - type: int
            desc: scales of multiscale [0,10,20,etc, etc]
            required: false
            example: '0, 10, 20, 30'

      casa_image:
        desc: Use CASA to create line data cube.
        type: map
        mapping:
          enable:
            type: bool
            required: false
            example: 'False'
          use_mstransform:
            desc: Execute wsclean_image on continuum-subtracted data (otherwise use non-continuum-subtracted data) (yes/no). Default is yes.
            type: bool
            required: false
            example: 'False'
          pol:
            desc: Polarizations in output cube (I,Q,U,V,XX,YY,XY,YX,RR,LL,RL,LR and combinations). Default is I.
            type: str
            required: false
            example: 'I'
          taper:
            desc: uvtaper as in casa clean either in arcsec of klambda.
            type: str
            required: false
            example: '0'
          spwid:
            desc: Spectral window to use. Default is 0.
            type: int
            required: false
            example: '0'
          nchans:
            desc: Number of channels. If set to 'all', all channels are used. Otherwise provide the number of channels (starting with startchan, see below). Default is 'all'.
            type: str
            required: false
            example: 'all'
          startchan:
            desc: Starting channel of the cube. Used in combination with nchans. Default is 0.
            type: int
            required: false
            example: '0'
          npix:
            desc: Image size in pixels. List of integers (width and height) or a single integer for square images. Default is worker npix.
            type: seq
            seq:
              - type: int
            required: false
            example: '1000, 1000'
          cell:
            desc: Scale of a pixel. Default unit is arcsec, but can be specificied, e.g. 'scale 20asec'. Default is worker cell.
            type: float
            required: false
            example: '7'
          weight:
            desc: Weightmode can be natural, uniform, briggs. When using Briggs weighting, the Robustness parameter robust has to be specified in addition. Default is worker weight.
            type: str
            required: false
            example: 'briggs'
          robust:
            desc: Robust parameter in case of Briggs weighting. Default is worker robust.
            type: float
            required: false
            example: '0.5'
          niter:
            desc: Maximum number of clean iterations to perform. Default is 1000000.
            type: int
            required: false
            example: '1000000'
          threshold:
            desc: Flux level to stop cleaning, must include units, e.g. '1.0mJy'. Default is '10mJy'.
            type: str
            required: false
            example: '10mJy'
          port2fits:
            desc: Port output to fits files if yes. Default is yes.
            type: bool
            required: false
            example: 'False'

      remove_stokes_axis:
        desc: Remove Stokes axis from HI cube
        type: map
        mapping:
          enable:
            desc: Execute this segment. Default is true
            type: bool
            required: false
            example: "False"

      pb_cube:
        desc: Make primary beam cube
        type: map
        mapping:
          enable:
            desc: Execute this segment. Default is false
            type: bool
            required: false
            example: 'False'
      
      freq_to_vel:
        desc: Convert the spectral axis' header keys of the HI cube from frequency to velocity in the radio definition, v=c(1-obsfreq/restfreq). No change of spectra reference frame is performed.
        type: map
        mapping:
          enable:
            desc: Execute conversion. Default is true
            type: bool
            required: false
            example: "False"
          reverse:
            desc: Perform the inverse transformation and change the cube 3rd axis from velocity to frequency. Default is false.
            type: bool
            required: false
            example: 'False'
      
      sofia:
        desc: Run SoFiA source finder to produce a source mask and a Moment-0 map
        type: map
        mapping:
          enable:
            desc: Execute segment sofia (yes/no)? Default is yes.
            type: bool
            required: false
            example: 'True'
          rmsMode:
            desc: Method to determine rms ('mad' for using median absolute deviation, 'std' for using standard deviation, 'negative' for using Gaussian fit to negative voxels). Default is 'mad'
            type: str
            required: false
            example: 'mad'
          threshold:
            desc: SoFiA source finding threshold. Default is 4.0.
            type: float
            required: false
            example: '4.0'
          flag:
            desc: Use flag regions (yes/no)? Default is no.
            type: bool
            required: false
            example: 'False'
          flagregion:
            desc: Pixel/channel range(s) to be flagged prior to source finding. Format is [[x1, x2, y1, y2, z1, z2], ...]. Default is [].
            seq:
              - type: int
            required: false
            example: '10, 10'
          merge:
            desc: Use method to de-select and merge emission islands detected by any of SoFiA source finding algorithms. If turned on, pixels with a separation of less than mergeX pixels in x direction and less than mergeY pixels in y-direction and less than z pixels in z-direction will be merged and identified as a single object in the mask. Detections whose extent in x-direction is smaller than minSizeX, in y direction is smaller than minSizeY, and in z-direction is smaller than minSizeZ will be removed from the mask. Parameter merge determines if the merging should be applied (yes/no). Default is yes.
            type: bool
            required: false
            example: 'False'
          mergeX:
            desc: Merge-'radius' in x-direction. Default is 2
            type: int
            required: false
            example: '2'
          mergeY:
            desc: Merge-'radius' in y-direction. Default is 2
            type: int
            required: false
            example: '2'
          mergeZ:
            desc: Merge-'radius' in z-direction (velocity direction). Default is 3
            type: int
            required: false
            example: '3'
          minSizeX:
            desc: Minimum size in x-direction. Default is 3.
            type: int
            required: false
            example: '3'
          minSizeY:
            desc: Minimum size in y-direction. Default is 3.
            type: int
            required: false
            example: '3'
          minSizeZ:
            desc: Minimum size in y-direction. Default is 5.
            type: int
            required: false
            example: '3'
          do_cubelets:
            desc: Create cubelets of HI sources.
            type: bool
            required: false
            example: 'True'
          do_mom0:
            desc: Create moment 0 map.
            type: bool
            required: false
            example: 'True'
          do_mom1:
            desc: Create moment 1 map.
            type: bool
            required: false
            example: 'True'

      flagging_summary:
        desc: Print out flagging summary.
        type: map
        mapping:
          enable:
            desc: Execute printing flagging summary.
            type: bool
            required: false
            example: 'False'
