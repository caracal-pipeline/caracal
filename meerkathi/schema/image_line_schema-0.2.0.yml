type: map
mapping:
  schema_version:
    type: str
    required: true

  image_line:
    desc: Process visibilities for spectral line work and create line cubes and images.
    type: map
    mapping:
      enable:
        desc: Execute segment image_line.
        type: bool
        required: true
        example: 'False'
      label:
        desc: Label of names of MS data sets to be used. MS data set names will always start with the data set id, followed by a hyphen, followed by desc.
        type: str
        required: false
        example: 'corr'
      line_name:
        desc: Line name string to be used for output file names.
        type: str
        required: false
        example: 'HI'
      restfreq:
        desc: Rest frequency default value for this worker.
        type: str
        required: false
        example: '1.420405752GHz'
      subtractmodelcol:
        desc: Replace the column CORRECTED_DATA with the difference CORRECTED_DATA - MODEL_DATA. This is useful for continuum subtraction as it enables the subtraction of the most recent continuum clean model.
        type: map
        mapping:
          enable:
            desc: Execute segment subtractmodelcol.
            type: bool
            required: false
            example: 'True'  
      mstransform:
        desc: Perform UVLIN continuum subtraction and/or doppler tracking corrections
        type: map
        mapping:
          enable:
            desc: Execute segment doppler correction.
            type: bool
            required: false
            example: 'True'
          telescope:
            desc: The name of the telescope from which observations were made. Default is the 'meerkat' telescope. Current options are gmrt, vla, wsrt, atca.
            enum: ['meerkat','vla','gmrt', 'wsrt', 'atca', 'askap']
            type: str
            required: false
            example: 'meerkat'
          doppler:
            desc: Transform channel labels and visibilities to a different spectral reference frame.
            type: bool
            required: false
            example: 'True'
          mode:
            desc: Regridding mode (channel/velocity/frequency/channel_b).
            type: str
            required: false
            example: 'frequency'
          outframe:
            desc: Output reference frame, options '', 'topo', 'geo', 'lsrk', 'lsrd', 'bary', 'galacto', 'lgroup', 'cmb', 'source'
            type: str
            enum : ['', 'topo', 'geo', 'lsrk', 'lsrd', 'bary', 'galacto', 'lgroup', 'cmb', 'source']
            required: false
            example: 'bary'
          veltype:
            desc: Definition of velocity (as used in mode), radio or optical.
            type: str
            required: false
            example: 'radio'
          outchangrid:
            desc: Output channel grid for Doppler correction. Default is 'auto', and the pipeline will calculate the appropriate channel grid. If not 'auto' it must be in the format 'nchan,chan0,chanw' where nchan is an integer, and chan0 and chanw must include units appropriate for the chosen mode (see parameter 'mode' above)
            type: str
            required: false
            example: 'auto'
          uvlin:
            desc: Perform continuum subtraction as in task uvcontsub whilst regridding within mstransform.
            type: bool
            required: false
            example: 'True'
          fitspw:
            desc: Spectral window channel selection for fitting the continuumSelection of line-free channels using CASA syntax (e.g. '0:0~100;150:300'). If set to null, a fit to all unflagges visibilities will be performed.
            type: str
            required: false
            example: ''
          fitorder:
            desc: Polynomial order for the continuum fits
            type: int
            required: false
            example: '1'
          column:
            desc: Data column to use.
            type: str
            required: false
            example: 'corrected'
          obsinfo:
            desc: Create obsinfo.txt and obsinfo.json of MS file created by mstransform.
            type: bool
            required: false
            example: 'True'
      sunblocker:
        desc: Use sunblocker to remove solar RFI. See description of sunblocker on github repository gigjozsa/sunblocker in method phazer of module sunblocker.py.
        type: map
        mapping:
          enable:
            desc: Execute segment sunblocker.
            type: bool
            required: false
            example: 'False'
          use_mstransform:
            desc: Execute sunblocker on continuum-subtracted data (otherwise use non-continuum-subtracted data).
            type: bool
            required: false
            example: 'True'
          imsize:
            desc: Image size (use the same as in wsclean_image or casa_image).
            type: int
            required: false
            example: '900'
          cell:
            desc: Cell size in arcsec (use the same as in wsclean_image or casa_image).
            type: float
            required: false
            example: '2.'
          threshold:
            desc: Distance from average beyond which data are flagged in units of sigma.
            type: float
            required: false
            example: '4.'
          vampirisms:
            desc: Apply only to data taken during day time.
            type: bool
            required: false
            example: 'False'
          uvmax:
            desc: Maximum uvdistance in wavelength to be analysed.
            type: float
            required: false
            example: '2000'
          uvmin:
            desc: Minimum uvdistance in wavelength to be analysed.
            type: float
            required: false
            example: '0.'

      make_image:
        desc: Image either with WSclean + SoFiA (for clean masks) or with Casa.
        type: map
        mapping:
          enable:
            desc: Execute segment make_image.
            type: bool
            required: false
            example: 'True'
          image_with:
            desc: Choose whether to image with WSclean + SoFiA ("wsclean") or with Casa ("casa").
            type: str
            required: false
            example: wsclean
          use_mstransform:
            desc: Image the .MS file(s) made by CASA MSTRANSFORM (continuum-subtracted and/or Doppler corrected).
            type: bool
            required: false
            example: 'True'
          pol:
            desc: Polarizations in output cube (I,Q,U,V,XX,YY,XY,YX,RR,LL,RL,LR and combinations).
            type: str
            required: false
            example: 'I'
          spwid:
            desc: Spectral window to use.
            type: int
            required: false
            example: '0'
          nchans:
            desc: Number of channels of HI cube, 0 means all channels.
            type: int
            required: false
            example: '0'
          firstchan:
            desc: First channel of HI cube.
            type: int
            required: false
            example: '0'
          binchans:
            desc: Integer binning of channels.
            type: int
            required: false
            example: '1'
          npix:
            desc: Image size in pixels. List of integers (width and height) or a single integer for square images.
            type: seq
            seq:
              - type: int
            required: false
            example: '900 , 900'
          cell:
            desc: Scale of a pixel. Default unit is arcsec, but can be specificied, e.g. 'scale 20asec'.
            type: float
            required: false
            example: '2'
          padding:
            desc: Images have initial size padding*npix, and are later trimmed to npix.
            type: float
            required: false
            example: '1.2'
          weight:
            desc: Weightmode can be natural, uniform, briggs. When using Briggs weighting, the Robustness parameter robust has to be specified in addition.
            type: str
            required: false
            example: 'briggs'
          robust:
            desc: Robust parameter in case of Briggs weighting.
            type: float
            required: false
            example: '0'
          taper:
            desc: Gaussian taper FWHM in arcsec. Zero means no tapering.
            type: float
            required: false
            example: '0'
          niter:
            desc: Maximum number of clean iterations to perform.
            type: int
            required: false
            example: '1000000'
          wscl_mgain:
            desc: WSclean gain for major iterations, Ratio of peak that will be subtracted in each major iteration.
            type: float
            required: false
            example: '1.0'
          wscl_sofia_niter:
            desc: Maximum number of WSclean + SoFiA iterations. The initial cleaning is done with WSclean automasking or with a user clean mask. Subsequent iterations use a SoFiA clean mask. A value of 1 means that WSclean is only executed once and SoFiA is not used.
            type: int
            required: false
            example: '2'
          wscl_sofia_converge:
            type: float
            desc: Stop the WSclean + SoFiA iterations if the cube RMS has dropped by a factor < wscl_sofia_converge when comparing the last two iterations. If set to 0 then the maximum number of iterations is performed regardless of the noise change.
            required: false
            example: '1.1'
          wscl_keep_final_products_only:
            desc: If set to true it deletes WSclean + Sofia intermediate cubes from the output directory, if set to false it keeps all the cubes of the WSclean + SoFiA iterations.
            type: bool
            required: false
            example: 'False'
          wscl_user_clean_mask:
            type: str
            desc: WSclean user clean mask for first WSclean + SoFiA iteration (give filename, to be located in the output/masking folder).
            required: false
            example: ''
          wscl_auto_mask:
            type: float
            desc: WSclean option. Construct a mask from found components and when a threshold of sigma is reached, continue cleaning with the mask down to the normal threshold.
            required: false
            example: '10'
          wscl_auto_threshold:
            type: float
            desc: WSclean option. Auto clean threshold.
            required: false
            example: '0.5'
          wscl_make_cube:
            desc: If set to true the output of WSclean is a data cube, if set to false the output is one fits file per spectral channel.
            type: bool
            required: false
            example: 'True'
          wscl_no_update_mod:
            desc: If set to true, WSclean will not store the line clean model in MODEL_DATA.
            type: bool
            required: false
            example: 'True'
          wscl_multi_scale:
            type: bool
            desc: Switch on WSclean multiscale cleaning.
            required: false
            example: 'False'
          wscl_multi_scale_scales:
            seq:
              - type: int
            desc: Scales of WSclean multiscale [0,10,20,etc, etc].
            required: false
            example: '0, 10, 20, 30'
          casa_threshold:
            desc: Flux level to stop CASA cleaning, must include units, e.g. '1.0mJy'.
            type: str
            required: false
            example: '10mJy'
          casa_port2fits:
            desc: Port CASA output to fits files.
            type: bool
            required: false
            example: 'False'

      remove_stokes_axis:
        desc: Remove Stokes axis from HI cube
        type: map
        mapping:
          enable:
            desc: Execute this segment.
            type: bool
            required: false
            example: "False"

      pb_cube:
        desc: Make primary beam cube
        type: map
        mapping:
          enable:
            desc: Execute this segment.
            type: bool
            required: false
            example: 'False'
          apply_pb: 
            desc: Whether to apply the primary beam correction to the image cube.
            type: bool
            required: false
            example: 'False'
      
      freq_to_vel:
        desc: Convert the spectral axis' header keys of the HI cube from frequency to velocity in the radio definition, v=c(1-obsfreq/restfreq). No change of spectra reference frame is performed.
        type: map
        mapping:
          enable:
            desc: Execute conversion.
            type: bool
            required: false
            example: "False"
          reverse:
            desc: Perform the inverse transformation and change the cube 3rd axis from radio velocity to frequency.
            type: bool
            required: false
            example: 'False'
      
      sofia:
        desc: Run SoFiA source finder to produce a source mask and a Moment-0 map
        type: map
        mapping:
          enable:
            desc: Execute segment sofia?
            type: bool
            required: false
            example: 'True'
          rmsMode:
            desc: Method to determine rms ('mad' for using median absolute deviation, 'std' for using standard deviation, 'negative' for using Gaussian fit to negative voxels).
            type: str
            required: false
            example: 'mad'
          threshold:
            desc: SoFiA source finding threshold.
            type: float
            required: false
            example: '4.0'
          flag:
            desc: Use flag regions?
            type: bool
            required: false
            example: 'False'
          flagregion:
            desc: Pixel/channel range(s) to be flagged prior to source finding. Format is [[x1, x2, y1, y2, z1, z2], ...].
            seq:
              - type: int
            required: false
            example: '10, 10'
          merge:
            desc: Use method to de-select and merge emission islands detected by any of SoFiA source finding algorithms. If turned on, pixels with a separation of less than mergeX pixels in x direction and less than mergeY pixels in y-direction and less than z pixels in z-direction will be merged and identified as a single object in the mask. Detections whose extent in x-direction is smaller than minSizeX, in y direction is smaller than minSizeY, and in z-direction is smaller than minSizeZ will be removed from the mask. Parameter merge determines if the merging should be applied.
            type: bool
            required: false
            example: 'False'
          mergeX:
            desc: Merge-'radius' in x-direction.
            type: int
            required: false
            example: '2'
          mergeY:
            desc: Merge-'radius' in y-direction.
            type: int
            required: false
            example: '2'
          mergeZ:
            desc: Merge-'radius' in z-direction (velocity direction).
            type: int
            required: false
            example: '3'
          minSizeX:
            desc: Minimum size in x-direction.
            type: int
            required: false
            example: '3'
          minSizeY:
            desc: Minimum size in y-direction.
            type: int
            required: false
            example: '3'
          minSizeZ:
            desc: Minimum size in y-direction.
            type: int
            required: false
            example: '3'
          do_cubelets:
            desc: Create cubelets of HI sources.
            type: bool
            required: false
            example: 'True'
          do_mom0:
            desc: Create moment 0 map.
            type: bool
            required: false
            example: 'True'
          do_mom1:
            desc: Create moment 1 map.
            type: bool
            required: false
            example: 'True'
      sharpener:
        desc: Run sharpener to extract spectrum of all continuum sources against the lines of sight. The spectra are then plotted.
        type: map
        mapping:
          enable:
            desc: Execute sharpener?
            type: bool
            required: false
            example: 'False'
          catalog:
            desc: Type of catalog to use (PYBDSF/NVSS).
            type: str
            enum: ['NVSS', 'PYBDSF']
            required: false
            example: 'PYBDSF'
          channels_per_plot:
            desc: Number of channels to plot per detail plot.
            type: int
            required: false
            example: '50'
          thresh:
            desc: Threshold to select sources in online catalogs (mJy).
            type: float
            required: false
            example: '20'
          width:
            desc: Field of view of output catalog (degrees).
            type: str
            required: false
            example: '1.0d'
          label:
            desc: Prefix label of plot names and titles.
            type: str
            required: false
            example: ''
